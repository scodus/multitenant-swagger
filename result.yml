openapi: 3.0.0
info:
  title: Municipality
  description: Municipality
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: crm type
  - name: crm
paths:
  /api/admin/crm-type:
    get:
      tags:
        - crm type
      summary: list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/crm-type/{crm_type_id}:
    get:
      tags:
        - crm type
      summary: get single crm type
      security:
        - bearerAuth: []
      parameters:
        - name: crm_type_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/crm/{crm_type_id}:
    get:
      tags:
        - crm
      summary: list
      security:
        - bearerAuth: []
      parameters:
        - name: crm_type_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/crm/{crm_id}:
    get:
      tags:
        - crm
      summary: get single crm
      security:
        - bearerAuth: []
      parameters:
        - name: crm_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/login:
    post:
      tags:
        - default
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@admin.com
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/admin/in-out-status:
    post:
      tags:
        - default
      summary: in out status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 1 || 0
                  example: '1'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
